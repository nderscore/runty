(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{53:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return c}));var a=n(2),r=n(6),i=(n(0),n(77)),o={title:"Extending With Custom Functions"},s={unversionedId:"custom-fns",id:"custom-fns",isDocsHomePage:!1,title:"Extending With Custom Functions",description:"Intro",source:"@site/docs/custom-fns.md",slug:"/custom-fns",permalink:"/docs/custom-fns",editUrl:"https://github.com/nderscore/runty/edit/master/website/docs/custom-fns.md",version:"current",sidebar:"sidebar",previous:{title:"Standard Library (fns)",permalink:"/docs/fns"}},u=[{value:"Intro",id:"intro",children:[]},{value:"Example",id:"example",children:[]},{value:"Type-casting Arguments",id:"type-casting-arguments",children:[]},{value:"Optional Arguments",id:"optional-arguments",children:[]},{value:"Graceful Failure",id:"graceful-failure",children:[]},{value:"More Examples",id:"more-examples",children:[]}],l={rightToc:u};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"intro"},"Intro"),Object(i.b)("p",null,"Runty is built to be extended with custom functionality by defining functions in the ",Object(i.b)("inlineCode",{parentName:"p"},"fns")," configuration option. All functions defined in this object are made available for templates to use in expressions."),Object(i.b)("p",null,"A ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api#runty-function"}),"Runty Function")," recieves two main arguments:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An array of arguments of arbitrary length that were passed to the function in the template. This is the primary method of accepting input."),Object(i.b)("li",{parentName:"ul"},"A reference to the variables dictionary to allow for argumentless functions that expect specific data from variables. This is also used internally by the getter function that powers ",Object(i.b)("inlineCode",{parentName:"li"},"%variable.expressions"),".")),Object(i.b)("p",null,"A runty function should return some value. Depending on where a function is called, the return value may be used as the condition in a conditional expression, as an argument to another function, or it can be dropped into a template in a value expression."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("p",null,"Here is a simple example of a runty function that determines whether a given numeric value should trigger plural grammar."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { runty, fns } from 'runty';\n\nconst plural = ([num], variables) => {\n  return Number(num) !== 1;\n};\n\nconst runt = runty({\n  fns: {\n    plural\n  }\n});\n\nconst result = runt('{%count} thing{$plural(%count)?s}')({ count: 1 });\n")),Object(i.b)("h2",{id:"type-casting-arguments"},"Type-casting Arguments"),Object(i.b)("p",null,"Generally, it is a good idea to type-cast your arguments when using them in a runty function."),Object(i.b)("p",null,"In the example above, the argument is cast to a ",Object(i.b)("inlineCode",{parentName:"p"},"Number"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"Number(num)\n")),Object(i.b)("p",null,"Doing so affords the flexibility for users or content editors (whoever is writing your templates) to pass in numeric arguments as strings directly in the template (",Object(i.b)("inlineCode",{parentName:"p"},"{%count} thing{%plural(1)?s}"),"), as well as guards against errors being thrown by unexpected inputs."),Object(i.b)("h2",{id:"optional-arguments"},"Optional Arguments"),Object(i.b)("p",null,"Sometimes, you might want to provide default cases for optional arguments in your runty functions. The easiest way to accomplish this is by using destructuring syntax:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const myFn = ([arg1, arg2 = '']) => {\n  // if the function is called with less than two arguments, arg2 will be an empty string ''\n  // ...\n};\n")),Object(i.b)("h2",{id:"graceful-failure"},"Graceful Failure"),Object(i.b)("p",null,"Ideally, runty functions should guard themselves against errors and gracefully resolve to a default or fallback value upon failure."),Object(i.b)("p",null,"If you do want template execution to fail on unexpected inputs to a function, any errors you throw will be your responsibility to capture and handle:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { runty, fns } from 'runty';\n\nconst plural = ([num], variables) => {\n  if (typeof num !== 'number') {\n    throw new Error('Invalid value supplied to plural: ' + String(num));\n  }\n\n  return num !== 1;\n};\n\nconst runt = runty({ fns: { plural } });\nconst template = runt('{$plural(1)?are:is}');\n\ntry {\n  const result = template();\n} catch (e) {\n  // Handle your fns errors\n}\n")),Object(i.b)("h2",{id:"more-examples"},"More Examples"),Object(i.b)("p",null,"Want to see more example runty functions? Check out the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nderscore/runty/tree/master/src/fns"}),"source code")," for our standard library fns on github."))}c.isMDXComponent=!0}}]);