(self.webpackChunkrunty_website=self.webpackChunkrunty_website||[]).push([[207],{1203:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var a=n(2122),r=(n(7294),n(3905));const i={title:"API Reference"},l={unversionedId:"api",id:"api",isDocsHomePage:!1,title:"API Reference",description:"Constructor",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/api",editUrl:"https://github.com/nderscore/runty/edit/master/website/docs/api.md",version:"current",frontMatter:{title:"API Reference"},sidebar:"sidebar",previous:{title:"Template Syntax",permalink:"/docs/syntax"},next:{title:"Standard Library (fns)",permalink:"/docs/fns"}},p=[{value:"Constructor",id:"constructor",children:[{value:"Options",id:"options",children:[]},{value:"Returns",id:"returns",children:[]}]},{value:"Parser",id:"parser",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Returns",id:"returns-1",children:[]}]},{value:"Template Function",id:"template-function",children:[{value:"Arguments",id:"arguments-1",children:[]},{value:"Returns",id:"returns-2",children:[]}]},{value:"RSyntaxError",id:"rsyntaxerror",children:[{value:"Static Properties",id:"static-properties",children:[]},{value:"Instance Properties",id:"instance-properties",children:[]}]},{value:"Runty Function",id:"runty-function",children:[{value:"Arguments",id:"arguments-2",children:[]},{value:"Returns",id:"returns-3",children:[]}]}],s={toc:p};function u({components:e,...t}){return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"constructor"},"Constructor"),(0,r.kt)("p",null,"Creates a new instance of the runty ",(0,r.kt)("a",{parentName:"p",href:"#parser"},"parser"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// with defaults:\nconst runt = runty();\n\n// with options:\nconst runt = runty({\n  asArray,\n  fns,\n  maxDepth\n});\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"asArray: boolean")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false")),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", all templates will result in an array of strings and tokens after execution."),(0,r.kt)("li",{parentName:"ul"},"Otherwise, default stringification behavior will be used."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"fns: { [string: name]: RuntyFunction }")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")," ",(0,r.kt)("em",{parentName:"p"},"(empty)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Object dictionary which defines functions which will be available to templates generated by this instance of the runty parser.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Functions should follow the specification defined by ",(0,r.kt)("a",{parentName:"p",href:"#runty-function"},"Runty Functions"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/fns"},"Standard Library")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/custom-fns"},"Custom Functions")," documentation for more info.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"maxDepth: number")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"8")),(0,r.kt)("li",{parentName:"ul"},"Sets the maximum depth of nested logic (expressions/function calls) that will be parsed by this instance. Runty will throw an error if this depth is exceeded.")))),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#parser"},(0,r.kt)("inlineCode",{parentName:"a"},"Parser")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A runty parser function.")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"parser"},"Parser"),(0,r.kt)("p",null,"Parses a runty template and returns a compiled ",(0,r.kt)("a",{parentName:"p",href:"#template-function"},"template function"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const template = runt(templateString, asArray);\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"templateString: string")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The runty ",(0,r.kt)("a",{parentName:"li",href:"/docs/syntax"},"template string")," to parse."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"asArray: boolean")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", this templates will result in an array of strings and tokens after execution."),(0,r.kt)("li",{parentName:"ul"},"Otherwise, default stringification behavior will be used.")))),(0,r.kt)("h3",{id:"returns-1"},"Returns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#template-function"},(0,r.kt)("inlineCode",{parentName:"a"},"Template Function")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A compiled template function.")))),(0,r.kt)("p",null,"If a template is invalid or contains syntax errors, this function will throw a ",(0,r.kt)("a",{parentName:"p",href:"#rsyntaxerror"},(0,r.kt)("inlineCode",{parentName:"a"},"RSyntaxError"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"template-function"},"Template Function"),(0,r.kt)("p",null,"Generates a string (or array of strings and tokens) from a dictionary of values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const result = template(variables, asArray);\n")),(0,r.kt)("h3",{id:"arguments-1"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"variables: object | array")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A dictionary of values to pass as variables to the template."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"asArray: boolean")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", this templates will result in an array of strings and tokens after execution."),(0,r.kt)("li",{parentName:"ul"},"Otherwise, default stringification behavior will be used.")))),(0,r.kt)("h3",{id:"returns-2"},"Returns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"string | (string | any)[]"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Unless an ",(0,r.kt)("inlineCode",{parentName:"li"},"asArray")," option was used, the resulting ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"."),(0,r.kt)("li",{parentName:"ul"},"If the ",(0,r.kt)("inlineCode",{parentName:"li"},"asArray")," option was used, an array of ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"any")," (tokens).")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"rsyntaxerror"},"RSyntaxError"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RSyntaxError")," is the Error class thrown when the template parser encounters invalid syntax."),(0,r.kt)("h3",{id:"static-properties"},"Static Properties"),(0,r.kt)("p",null,"The following static properties are available on the ",(0,r.kt)("inlineCode",{parentName:"p"},"RSyntaxError")," class, which describe types of syntax errors."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSyntaxError.EXPECTED_END")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSyntaxError.INVALID_EXPRESSION")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSyntaxError.INVALID_FUNCTION")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSyntaxError.NESTING_DEPTH")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSyntaxError.UNTERMINATED_EXPRESSION")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSyntaxError.UNTERMINATED_FUNCTION"))),(0,r.kt)("h3",{id:"instance-properties"},"Instance Properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message: string")),(0,r.kt)("p",{parentName:"li"},"Long-form syntax error message")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"type: RSyntaxError.(EXPECTED_END|INVALID_EXPRESSION|INVALID_FUNCTION|NESTING_DEPTH|UNTERMINATED_EXPRESSION|UNTERMINATED_FUNCTION)")),(0,r.kt)("p",{parentName:"li"},"The type of syntax error that was encountered.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"rest: string")),(0,r.kt)("p",{parentName:"li"},"The remaining unparsed template string.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"value: string")),(0,r.kt)("p",{parentName:"li"},"Some errors contain another value to provide additional context, such as the function name of an ",(0,r.kt)("inlineCode",{parentName:"p"},"INVALID_FUNCTION")," error"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"runty-function"},"Runty Function"),(0,r.kt)("p",null,"A function defined in the ",(0,r.kt)("inlineCode",{parentName:"p"},"fns")," option passed to the constructor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"someFn(args, variables);\n")),(0,r.kt)("h3",{id:"arguments-2"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"args: (string | any)[]")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"An array of arguments passed to the function."),(0,r.kt)("li",{parentName:"ul"},"May be plain strings, token values, or results from other function calls."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"variables: object | array")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The dictionary of values passed to the template being executed.")))),(0,r.kt)("h3",{id:"returns-3"},"Returns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"any"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The resulting value."),(0,r.kt)("li",{parentName:"ul"},"This may be used as a condition, as an argument to another function, or inserted into a template as a value.")))))}u.isMDXComponent=!0}}]);