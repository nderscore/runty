"use strict";(self.webpackChunkrunty_website=self.webpackChunkrunty_website||[]).push([[525],{876:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5829:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return s}});var a=n(7896),r=(n(2784),n(876));const i={title:"Template Syntax"},o=void 0,p={unversionedId:"syntax",id:"syntax",title:"Template Syntax",description:"Syntax",source:"@site/docs/syntax.md",sourceDirName:".",slug:"/syntax",permalink:"/docs/syntax",editUrl:"https://github.com/nderscore/runty/edit/master/packages/website/docs/syntax.md",tags:[],version:"current",frontMatter:{title:"Template Syntax"},sidebar:"sidebar",previous:{title:"Get Started",permalink:"/docs/"},next:{title:"API Reference",permalink:"/docs/api"}},l={},s=[{value:"Syntax",id:"syntax",level:2}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Templates")," are a string containing a sequence of plain strings and expressions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Expressions")," are wrapped by a pair of ",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),"'s and come in two types:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Value Expression")),(0,r.kt)("p",{parentName:"li"},"Places a value at a specific point in a string template."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"This is a template {%someVariable} with value expressions {$someFunction()}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Conditional Expression")),(0,r.kt)("p",{parentName:"li"},"Evaluates a condition, then conditionally places one of two template strings using ternary (",(0,r.kt)("inlineCode",{parentName:"p"},"?:"),") syntax."),(0,r.kt)("p",{parentName:"li"},'A conditional expression is "truthy" when it\'s value is not ',(0,r.kt)("inlineCode",{parentName:"p"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"NaN"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),", or an empty\nstring ",(0,r.kt)("inlineCode",{parentName:"p"},"''"),". Because it is a renderable value in a string, the number ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," is treated as a truthy value."),(0,r.kt)("p",{parentName:"li"},"If the condition is truthy, the expression will resolve to the string after the ",(0,r.kt)("inlineCode",{parentName:"p"},"?"),".\nOtherwise, it will resolve to the string after the ",(0,r.kt)("inlineCode",{parentName:"p"},":"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},":")," is optional and if excluded, an empty\nstring ",(0,r.kt)("inlineCode",{parentName:"p"},"''")," will be placed if the condition is falsey."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"{%someVar?truthy string:falsey string} {$someFn(%someVar,foo)?truthy string only}\n")),(0,r.kt)("p",{parentName:"li"},"Additional expressions can be nested inside of the truthy/falsey case."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Welcome, {%firstName?{%firstName}{%lastName? {%lastName}}:Guest}!\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Value expressions and the condition of a conditional expression contain either a ",(0,r.kt)("strong",{parentName:"p"},"Variable Accessor")," or a ",(0,r.kt)("strong",{parentName:"p"},"Function Call"),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Variable Accessors")," are indicated by a ",(0,r.kt)("inlineCode",{parentName:"p"},"%")," followed by a property name or a chain of ",(0,r.kt)("inlineCode",{parentName:"p"},"."),"-separated\nproperty names. They retrieve values from the dictionary of variables passed to the template at the time\nof execution."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"%variableName\n%some.deepValue\n%some.deeper.value\n%someArray.3.name\n")),(0,r.kt)("p",{parentName:"li"},"If a value is not found, a variable accessor will resolve to an empty string ",(0,r.kt)("inlineCode",{parentName:"p"},"''"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Function Calls")," are indicated by a ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," followed by a function name and a pair of parenthesis ",(0,r.kt)("inlineCode",{parentName:"p"},"()")," which\nmay optionally contain a list of ",(0,r.kt)("inlineCode",{parentName:"p"},","),"-separated arguments."),(0,r.kt)("p",{parentName:"li"},"Valid arguments for function calls are variable accessors, plain strings, and nested function calls. Functions may accept any number of arguments."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"$functionName()\n$functionName(%arg1,plain string)\n$fnOne(%var,$fnTwo(%otherVar,foo))\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"White space is always preserved and is interpretted as being part of a plain string.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Reserved characters (",(0,r.kt)("inlineCode",{parentName:"p"},"{}?:)%$"),") can be escaped with a ",(0,r.kt)("inlineCode",{parentName:"p"},"\\")," prefix. Reserved characters are context-aware. For\nexample, a ",(0,r.kt)("inlineCode",{parentName:"p"},"}")," that is not within an expression does not need to be escaped."))))}m.isMDXComponent=!0}}]);